name: ArgoCD preview app

on:
  workflow_call:
    inputs:
      APP_URL_TEMPLATE:
        description: ID number of the pull request assiocited with the cache
        required: true
        type: string
      PR_NUMBER:
        description: ID number of the PR used to deploy Argo-CD preview app
        required: true
        type: number
      ARGOCD_APP_NAME_TEMPLATE:
        description: Template for the Argo-CD application name
        required: true
        type: string
      ARGOCD_SYNC_PAYLOAD_TEMPLATE: 
        description: Template
        required: true
        type: string
      ARGOCD_URL:
        description: URL of the Argo-CD server
        required: true
        type: string
    secrets:
      ARGOCD_TOKEN:
        description: Token used to re-deploy Argo-CD preview app
        required: true

jobs:
  preview-comment:
    name: Add comment with preview infos
    # if: contains(github.event.pull_request.labels.*.name, 'preview')
    runs-on: ubuntu-latest
    steps:
    - name: Checks-out repository
      uses: actions/checkout@v4

    - name: Generate app url
      id: generate-url
      run: |
        echo "APP_URL=$(echo "${{ inputs.APP_URL_TEMPLATE }}" | sed 's|<pr_number>|${{ inputs.PR_NUMBER }}|g')" >> $GITHUB_OUTPUT

    - name: Comment PR
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          ðŸ¤– Hey !

          A preview of the application is available at : ${{ steps.generate-url.outputs.APP_URL }}

          *Please be patient, deployment may take a few minutes.*
        comment_tag: preview

  preview-sync:
    name: Redeploy preview app
    if: ${{ contains(github.event.pull_request.labels.*.name, 'preview') && inputs.PR_NUMBER != '' }}
    runs-on: ubuntu-latest
    steps:
    - name: Replace template fields
      id: feed-template
      run: |
        echo "ARGOCD_APP_NAME=$(echo '${{ inputs.ARGOCD_APP_NAME_TEMPLATE }}' | sed 's|<pr_number>|${{ inputs.PR_NUMBER }}|g')" >> $GITHUB_OUTPUT
        echo "ARGOCD_SYNC_PAYLOAD=$(echo '${{ inputs.ARGOCD_SYNC_PAYLOAD_TEMPLATE }}' | sed 's|<pr_number>|${{ inputs.PR_NUMBER }}|g')" >> $GITHUB_OUTPUT

    - name: Deploy new image
      run: |
        set -e

        RESPONSE_CODE=$(curl -s -w "%{http_code}" -o >(RESPONSE_BODY=$(cat)) -X POST ${{ inputs.ARGOCD_URL }}/api/v1/applications/${{ steps.feed-template.outputs.ARGOCD_APP_NAME }}/sync \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.ARGOCD_TOKEN }}" \
          -d '${{ steps.feed-template.outputs.ARGOCD_SYNC_PAYLOAD }}')

        echo "HTTP response code: $RESPONSE_CODE"

        if [ "$RESPONSE_CODE" -ne 200 ]; then
          echo "Error: Non-200 HTTP response detected."
          echo "Response body: $RESPONSE_BODY"
          exit 1
        fi
      continue-on-error: true
